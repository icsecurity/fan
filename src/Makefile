# Makefile.in generated by automake 1.11.1 from Makefile.am.
# bin/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/nfdump
pkgincludedir = $(includedir)/nfdump
pkglibdir = $(libdir)/nfdump
pkglibexecdir = $(libexecdir)/nfdump
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = analyzer$(EXEEXT)
EXTRA_PROGRAMS = nftest$(EXEEXT) nfgen$(EXEEXT) nfreader$(EXEEXT)
TESTS = nftest$(EXEEXT) test.sh
#am__append_1 = sfcapd
#am__append_2 = nfprofile
#am__append_3 = nftrack
#am__append_4 = ft2nfdump
am__append_5 = pcap_reader.c pcap_reader.h
#am__append_6 = pcap_reader.c pcap_reader.h
subdir = bin
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in grammar.c \
	grammar.h scanner.c
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = sfcapd$(EXEEXT)
#am__EXEEXT_2 = nfprofile$(EXEEXT)
#am__EXEEXT_3 = nftrack$(EXEEXT)
#am__EXEEXT_4 = ft2nfdump$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__ft2nfdump_SOURCES_DIST = ft2nfdump.c nf_common.c nf_common.h \
	version.h minilzo.c minilzo.h lzoconf.h lzodefs.h nffile.c \
	nffile.h nfx.c nfx.h nfxstat.h nfxstat.c util.c util.h
am__objects_1 = ft2nfdump-nf_common.$(OBJEXT)
am__objects_2 = ft2nfdump-minilzo.$(OBJEXT) ft2nfdump-nffile.$(OBJEXT) \
	ft2nfdump-nfx.$(OBJEXT) ft2nfdump-nfxstat.$(OBJEXT)
am__objects_3 = ft2nfdump-util.$(OBJEXT)
#am_ft2nfdump_OBJECTS = ft2nfdump-ft2nfdump.$(OBJEXT) \
#	$(am__objects_1) $(am__objects_2) \
#	$(am__objects_3)
ft2nfdump_OBJECTS = $(am_ft2nfdump_OBJECTS)
ft2nfdump_DEPENDENCIES =
ft2nfdump_LINK = $(CCLD) $(ft2nfdump_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_4 = util.$(OBJEXT)
am__objects_5 = minilzo.$(OBJEXT) nffile.$(OBJEXT) nfx.$(OBJEXT) \
	nfxstat.$(OBJEXT)
am__objects_6 = flist.$(OBJEXT) fts_compat.$(OBJEXT)
am__objects_7 = panonymizer.$(OBJEXT) rijndael.$(OBJEXT)
am_nfanon_OBJECTS = nfanon.$(OBJEXT) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7)
nfanon_OBJECTS = $(am_nfanon_OBJECTS)
nfanon_LDADD = $(LDADD)
nfanon_DEPENDENCIES =
am__nfcapd_SOURCES_DIST = nfcapd.c nf_common.c nf_common.h version.h \
	util.c util.h minilzo.c minilzo.h lzoconf.h lzodefs.h nffile.c \
	nffile.h nfx.c nfx.h nfxstat.h nfxstat.c flist.c flist.h \
	fts_compat.c fts_compat.h nfstatfile.c nfstatfile.h launch.c \
	launch.h nfnet.c nfnet.h collector.c collector.h netflow_v1.c \
	netflow_v1.h netflow_v5_v7.c netflow_v5_v7.h netflow_v9.c \
	netflow_v9.h ipfix.c ipfix.h bookkeeper.c bookkeeper.h \
	expire.c expire.h pcap_reader.c pcap_reader.h
am__objects_8 = nfcapd-nf_common.$(OBJEXT)
am__objects_9 = nfcapd-util.$(OBJEXT)
am__objects_10 = nfcapd-minilzo.$(OBJEXT) nfcapd-nffile.$(OBJEXT) \
	nfcapd-nfx.$(OBJEXT) nfcapd-nfxstat.$(OBJEXT)
am__objects_11 = nfcapd-flist.$(OBJEXT) nfcapd-fts_compat.$(OBJEXT)
am__objects_12 = nfcapd-nfstatfile.$(OBJEXT)
am__objects_13 = nfcapd-launch.$(OBJEXT)
am__objects_14 = nfcapd-nfnet.$(OBJEXT)
am__objects_15 = nfcapd-collector.$(OBJEXT)
am__objects_16 = nfcapd-netflow_v1.$(OBJEXT)
am__objects_17 = nfcapd-netflow_v5_v7.$(OBJEXT)
am__objects_18 = nfcapd-netflow_v9.$(OBJEXT)
am__objects_19 = nfcapd-ipfix.$(OBJEXT)
am__objects_20 = nfcapd-bookkeeper.$(OBJEXT)
am__objects_21 = nfcapd-expire.$(OBJEXT)
#am__objects_22 = nfcapd-pcap_reader.$(OBJEXT)
am_nfcapd_OBJECTS = nfcapd-nfcapd.$(OBJEXT) $(am__objects_8) \
	$(am__objects_9) $(am__objects_10) $(am__objects_11) \
	$(am__objects_12) $(am__objects_13) $(am__objects_14) \
	$(am__objects_15) $(am__objects_16) $(am__objects_17) \
	$(am__objects_18) $(am__objects_19) $(am__objects_20) \
	$(am__objects_21) $(am__objects_22)
nfcapd_OBJECTS = $(am_nfcapd_OBJECTS)
nfcapd_DEPENDENCIES =
nfcapd_LINK = $(CCLD) $(nfcapd_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_23 = nf_common.$(OBJEXT)
am__objects_24 = nflowcache.$(OBJEXT)
am__objects_25 = grammar.$(OBJEXT) scanner.$(OBJEXT) nftree.$(OBJEXT) \
	ipconv.$(OBJEXT)
am__objects_26 = nfprof.$(OBJEXT)
am_nfdump_OBJECTS = nfdump.$(OBJEXT) nfstat.$(OBJEXT) \
	nfexport.$(OBJEXT) $(am__objects_23) $(am__objects_24) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_25) $(am__objects_26)
nfdump_OBJECTS = $(am_nfdump_OBJECTS)
nfdump_LDADD = $(LDADD)
nfdump_DEPENDENCIES =
am__objects_27 = bookkeeper.$(OBJEXT)
am__objects_28 = expire.$(OBJEXT)
am__objects_29 = nfstatfile.$(OBJEXT)
am_nfexpire_OBJECTS = nfexpire.$(OBJEXT) $(am__objects_27) \
	$(am__objects_28) $(am__objects_4) $(am__objects_29)
nfexpire_OBJECTS = $(am_nfexpire_OBJECTS)
nfexpire_DEPENDENCIES =
am_nfgen_OBJECTS = nfgen.$(OBJEXT) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6)
nfgen_OBJECTS = $(am_nfgen_OBJECTS)
nfgen_LDADD = $(LDADD)
nfgen_DEPENDENCIES =
am_nfprofile_OBJECTS = nfprofile.$(OBJEXT) profile.$(OBJEXT) \
	$(am__objects_23) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_25) $(am__objects_29)
nfprofile_OBJECTS = $(am_nfprofile_OBJECTS)
nfprofile_DEPENDENCIES =
am_nfreader_OBJECTS = nfreader.$(OBJEXT) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6)
nfreader_OBJECTS = $(am_nfreader_OBJECTS)
nfreader_LDADD = $(LDADD)
nfreader_DEPENDENCIES =
am__objects_30 = nfnet.$(OBJEXT)
am__objects_31 = collector.$(OBJEXT)
am__objects_32 = netflow_v1.$(OBJEXT)
am__objects_33 = netflow_v9.$(OBJEXT)
am__objects_34 = netflow_v5_v7.$(OBJEXT)
am__objects_51 = frequency.$(OBJEXT)
am__objects_52 = panonymizer.$(OBJEXT)
am__objects_53 = rijndael.$(OBJEXT)
am__objects_56 = MethodManager.$(OBJEXT)
am__objects_61 = log.$(OBJEXT)
am__objects_62 = ezxml.$(OBJEXT)
am__objects_63 = bookkeeper.$(OBJEXT)
am__objects_64 = ipfix.$(OBJEXT)
am__objects_65 = nfstatfile.$(OBJEXT)
am__objects_66 = expire.$(OBJEXT)
am_nfreplay_OBJECTS = nfreplay.$(OBJEXT) $(am__objects_23) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_25) $(am__objects_26) $(am__objects_30) \
	$(am__objects_31) $(am__objects_32) $(am__objects_33) \
	$(am__objects_34) $(am__objects_51) $(am__objects_52) \
	$(am__objects_53) $(am__objects_56) $(am__objects_61) $(am__objects_62) $(am__objects_63) $(am__objects_64) $(am__objects_65)\
	$(am__objects_66)\
	#$(am__objects_54) $(am__objects_55) \
	#$(am__objects_56) $(am__objects_57) $(am__objects_58) \
	#$(am__objects_59) $(am__objects_60) $(am__objects_61) \
	#$(am__objects_62) $(am__objects_63) $(am__objects_64) \
	#$(am__objects_65) $(am__objects_66) $(am__objects_67) \
	#$(am__objects_68) $(am__objects_69) $(am__objects_70) \
	#$(am__objects_71) $(am__objects_72) $(am__objects_73) \
	#$(am__objects_74)
nfreplay_OBJECTS = $(am_nfreplay_OBJECTS)
nfreplay_LDADD = $(LDADD)
nfreplay_DEPENDENCIES =
am_nftest_OBJECTS = nftest.$(OBJEXT) $(am__objects_23) \
	$(am__objects_25) $(am__objects_5)
nftest_OBJECTS = $(am_nftest_OBJECTS)
nftest_LDADD = $(LDADD)
am__objects_35 = nftrack-nf_common.$(OBJEXT)
am__objects_36 = nftrack-util.$(OBJEXT)
am__objects_37 = nftrack-minilzo.$(OBJEXT) nftrack-nffile.$(OBJEXT) \
	nftrack-nfx.$(OBJEXT) nftrack-nfxstat.$(OBJEXT)
am__objects_38 = nftrack-flist.$(OBJEXT) nftrack-fts_compat.$(OBJEXT)
am__objects_39 = nftrack-grammar.$(OBJEXT) nftrack-scanner.$(OBJEXT) \
	nftrack-nftree.$(OBJEXT) nftrack-ipconv.$(OBJEXT)
am_nftrack_OBJECTS = nftrack-nftrack.$(OBJEXT) \
	nftrack-nftrack_rrd.$(OBJEXT) nftrack-nftrack_stat.$(OBJEXT) \
	$(am__objects_35) $(am__objects_36) $(am__objects_37) \
	$(am__objects_38) $(am__objects_39)
nftrack_OBJECTS = $(am_nftrack_OBJECTS)
nftrack_DEPENDENCIES =
nftrack_LINK = $(CCLD) $(nftrack_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__sfcapd_SOURCES_DIST = sfcapd.c sflow.c sflow.h sflow_proto.h \
	nf_common.c nf_common.h version.h util.c util.h minilzo.c \
	minilzo.h lzoconf.h lzodefs.h nffile.c nffile.h nfx.c nfx.h \
	nfxstat.h nfxstat.c flist.c flist.h fts_compat.c fts_compat.h \
	nfstatfile.c nfstatfile.h launch.c launch.h nfnet.c nfnet.h \
	collector.c collector.h bookkeeper.c bookkeeper.h expire.c \
	expire.h pcap_reader.c pcap_reader.h
am__objects_40 = sfcapd-nf_common.$(OBJEXT)
am__objects_41 = sfcapd-util.$(OBJEXT)
am__objects_42 = sfcapd-minilzo.$(OBJEXT) sfcapd-nffile.$(OBJEXT) \
	sfcapd-nfx.$(OBJEXT) sfcapd-nfxstat.$(OBJEXT)
am__objects_43 = sfcapd-flist.$(OBJEXT) sfcapd-fts_compat.$(OBJEXT)
am__objects_44 = sfcapd-nfstatfile.$(OBJEXT)
am__objects_45 = sfcapd-launch.$(OBJEXT)
am__objects_46 = sfcapd-nfnet.$(OBJEXT)
am__objects_47 = sfcapd-collector.$(OBJEXT)
am__objects_48 = sfcapd-bookkeeper.$(OBJEXT)
am__objects_49 = sfcapd-expire.$(OBJEXT)
#am__objects_50 = sfcapd-pcap_reader.$(OBJEXT)
am_sfcapd_OBJECTS = sfcapd-sfcapd.$(OBJEXT) sfcapd-sflow.$(OBJEXT) \
	$(am__objects_40) $(am__objects_41) $(am__objects_42) \
	$(am__objects_43) $(am__objects_44) $(am__objects_45) \
	$(am__objects_46) $(am__objects_47) $(am__objects_48) \
	$(am__objects_49) $(am__objects_50)
sfcapd_OBJECTS = $(am_sfcapd_OBJECTS)
sfcapd_DEPENDENCIES =
sfcapd_LINK = $(CCLD) $(sfcapd_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
YLWRAP = $(top_srcdir)/ylwrap
YACCCOMPILE = $(YACC) $(YFLAGS) $(AM_YFLAGS)
SOURCES = $(nfreplay_SOURCES) \
DIST_SOURCES = $(nfreplay_SOURCES) \
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#ACLOCAL = ${SHELL} /home/andrea/Scrivania/nfdump-1.6.6/missing --run aclocal-1.11
#AMTAR = ${SHELL} /home/andrea/Scrivania/nfdump-1.6.6/missing --run tar
#AUTOCONF = ${SHELL} /home/andrea/Scrivania/nfdump-1.6.6/missing --run autoconf
#AUTOHEADER = ${SHELL} /home/andrea/Scrivania/nfdump-1.6.6/missing --run autoheader
#AUTOMAKE = ${SHELL} /home/andrea/Scrivania/nfdump-1.6.6/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -fno-strict-aliasing
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FTS_OBJ = 
FT_INCLUDES = 
FT_LDFLAGS = 
LIBSO = ../lib
LIBO = ../bin
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -L.
LEX = flex
LEXLIB = -lfl 
LEX_OUTPUT_ROOT = lex.yy
LFLAGS = -i
LIBOBJS = 
LIBS = -L/. -lresolv -lm -lpthread -ldl 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/andrea/Scrivania/nfdump-1.6.6/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = nfdump
PACKAGE_BUGREPORT = phaag@users.sourceforge.net
PACKAGE_NAME = nfdump
PACKAGE_STRING = nfdump 1.6.6 $Date: 2012-03-11 11:57:45 +0100 (Sun, 11 Mar 2012) $
PACKAGE_TARNAME = nfdump
PACKAGE_URL = 
PACKAGE_VERSION = 1.6.6 $Date: 2012-03-11 11:57:45 +0100 (Sun, 11 Mar 2012) $
PATH_SEPARATOR = :
RRD_LIBS = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.6.6 $Date: 2012-03-11 11:57:45 +0100 (Sun, 11 Mar 2012) $
YACC = byacc
YFLAGS = 
#abs_builddir = /home/andrea/Scrivania/nfdump-1.6.6/bin
#abs_srcdir = /home/andrea/Scrivania/nfdump-1.6.6/bin
#abs_top_builddir = /home/andrea/Scrivania/nfdump-1.6.6
#abs_top_srcdir = /home/andrea/Scrivania/nfdump-1.6.6
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ../bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/andrea/Scrivania/nfdump-1.6.6/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/bin
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
check_PROGRAMMS = test.sh
BUILT_SOURCES = grammar.h
AM_YFLAGS = -d
INCLUDES = $(DEPS_CFLAGS)
LDADD = $(DEPS_LIBS)

#Add extra debug info for gdb
AM_CFLAGS = -ggdb 
common = nf_common.c nf_common.h version.h 
frequency = frequency.c frequency.h
util = util.c util.h
filelzo = minilzo.c minilzo.h lzoconf.h lzodefs.h nffile.c nffile.h nfx.c nfx.h nfxstat.h nfxstat.c
nflist = flist.c flist.h fts_compat.c fts_compat.h
filter = grammar.y scanner.l nftree.c nftree.h ipconv.c ipconv.h rbtree.h
nfprof = nfprof.c nfprof.h
nfnet = nfnet.c nfnet.h
anon = panonymizer.c panonymizer.h rijndael.c rijndael.h
collector = collector.c collector.h
nfv1 = netflow_v1.c netflow_v1.h
nfv9 = netflow_v9.c netflow_v9.h
ipfix = ipfix.c ipfix.h
nfv5v7 = netflow_v5_v7.c netflow_v5_v7.h
nfstatfile = nfstatfile.c nfstatfile.h
nflowcache = nflowcache.c nflowcache.h
bookkeeper = bookkeeper.c bookkeeper.h
expire = expire.c expire.h
launch = launch.c launch.h
entropy_ip_source = entropy_ip_source.c
entropy_ip_destination = entropy_ip_destination.c
entropy_ipsrc_srcport = entropy_ipsrc_srcport.c 
entropy_ipdst_dstport = entropy_ipdst_dstport.c 
entropy_npackets_nbytes = entropy_npackets_nbytes.c 
method_manager = MethodManager.h MethodManager.h
entropy_ipsrc_dstsrc_srcport_dstport = entropy_ipsrc_dstsrc_srcport_dstport.c
KL_ip_source = KL_ip_source.c
KL_ip_destination = KL_ip_destination.c
KL_ipsrc_srcport = KL_ipsrc_srcport.c
KL_ipdst_dstport = KL_ipdst_dstport.c
KL_npackets_nbytes = KL_npackets_nbytes.c
KL_ipsrc_dstsrc_srcport_dstport = KL_ipsrc_dstsrc_srcport_dstport.c
Renyi_ip_source = Renyi_ip_source.c
Renyi_ip_destination = Renyi_ip_destination.c
Renyi_ipsrc_srcport = Renyi_ipsrc_srcport.c
Renyi_ipdst_dstport = Renyi_ipdst_dstport.c
Renyi_npackets_nbytes = Renyi_npackets_nbytes.c
Renyi_ipsrc_dstsrc_srcport_dstport = Renyi_ipsrc_dstsrc_srcport_dstport.c
log = log.h log.c
syn_flooding = syn_flooding.c 
ezxml = ezxml.h ezxml.c

nfdump_SOURCES = nfdump.c nfdump.h nfstat.c nfstat.h nfexport.c nfexport.h \
	$(common) $(nflowcache) $(util) $(filelzo) $(nflist) $(filter) $(nfprof)

nfreplay_SOURCES = nfreplay.c \
	$(common) $(bookeeper) $(util) $(filelzo) $(nflist) $(filter) $(nfprof) \
	$(nfnet) $(collector) $(nfv1) $(nfv9) $(nfv5v7) $(frequency) $(anon) \
 	$(method_manager) $(log) $(ezxml)  $(ipfix) $(nfstatfile) $(expire)\	

nfprofile_SOURCES = nfprofile.c profile.c profile.h \
	$(common) $(util) $(filelzo) $(nflist) $(filter) $(nfstatfile)

nfprofile_LDADD = -lrrd
nftrack_SOURCES = ../extra/nftrack/nftrack.c  ../extra/nftrack/nftrack_rrd.c  ../extra/nftrack/nftrack_stat.c \
	$(common) $(util) $(filelzo) $(nflist) $(filter)

nftrack_CFLAGS = -I ../extra/nftrack
nftrack_LDADD = -lrrd
nfcapd_SOURCES = nfcapd.c $(common) $(util) $(filelzo) $(nflist) \
	$(nfstatfile) $(launch) $(nfnet) $(nfv1) \
	$(nfv5v7) $(nfv9) $(ipfix) $(bookkeeper) $(expire) \
	$(am__append_5)
#nfcapd_CFLAGS = -DPCAP
#nfcapd_LDADD = -lpcap
sfcapd_SOURCES = sfcapd.c sflow.c sflow.h sflow_proto.h $(common) \
	$(util) $(filelzo) $(nflist) $(nfstatfile) $(launch) $(nfnet) \
	$(collector) $(bookkeeper) $(expire) $(am__append_6)
#sfcapd_CFLAGS = -DPCAP
#sfcapd_LDADD = -lpcap
nfreader_SOURCES = nfreader.c \
	$(util) $(filelzo) $(nflist) 

nfanon_SOURCES = nfanon.c \
	$(util) $(filelzo) $(nflist) $(anon)

nfgen_SOURCES = nfgen.c $(util) $(filelzo) $(nflist)
nfexpire_SOURCES = nfexpire.c \
	$(bookkeeper) $(expire) $(util) $(nfstatfile)

nfexpire_LDADD = 
nftest_SOURCES = nftest.c $(common) $(filter) $(filelzo)
nftest_DEPENDENCIES = nfgen
#ft2nfdump_SOURCES = ft2nfdump.c $(common) $(filelzo) $(util)
#ft2nfdump_CFLAGS = 
#ft2nfdump_LDADD = -lft -lz 
EXTRA_DIST = inline.c collector_inline.c nffile_inline.c nfdump_inline.c heapsort_inline.c applybits_inline.c test.sh nfdump.test.out parse_csv.pl
CLEANFILES = lex.yy.c grammar.c grammar.h scanner.c scanner.h
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am	
	gcc -fPIC -g -c -Wall frequency.c -lm
	gcc -fPIC -g -c -Wall log.c -lm
	gcc -fPIC -g -c -Wall entropy.c -lm
	gcc -fPIC -g -c -Wall ./cluster-1.50/src/cluster.c -lm
	gcc -shared -Wall -o $(LIBSO)/entropy.so entropy.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall Kullback-leibler.c -lm
	gcc -shared -Wall -o $(LIBSO)/Kullback-leibler.so Kullback-leibler.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall frequency_mod.c -lm
	gcc -shared -Wall -o $(LIBSO)/Frequency_mod.so frequency_mod.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall entropy_modded.c -lm
	gcc -shared -Wall -o $(LIBSO)/Entropy_modded.so entropy_modded.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall Kl_modded.c -lm
	gcc -shared -Wall -o $(LIBSO)/Kl_modded.so Kl_modded.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall Renyi.c -lm
	gcc -shared -Wall -o $(LIBSO)/Renyi.so Renyi.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall Renyi_modded.c -lm
	gcc -shared -Wall -o $(LIBSO)/Renyi_modded.so Renyi_modded.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall syn_flooding.c -lm
	gcc -shared -Wall -o $(LIBSO)/Syn_flooding.so syn_flooding.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall stock_market.c -lm
	gcc -shared -Wall -o $(LIBSO)/Stock_market.so stock_market.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall kmeans_anomaly.c -lm
	gcc -shared -Wall -o $(LIBSO)/Kmeans_anomaly.so kmeans_anomaly.o frequency.o log.o cluster.o -lc -lm
	gcc -fPIC -g -c -Wall flooding_investigation.c -lm
	gcc -shared -Wall -o $(LIBSO)/Flooding_investigation.so flooding_investigation.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall ddos_statistical_test.c -lm
	gcc -shared -Wall -o $(LIBSO)/Ddos_statistical_test.so ddos_statistical_test.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall contabytes.c -lm
	gcc -shared -Wall -o  $(LIBSO)/Contabytes.so contabytes.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall contaflussi.c -lm
	gcc -shared -Wall -o  $(LIBSO)/Contaflussi.so contaflussi.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall Kl_entropy_product.c -lm
	gcc -shared -Wall -o  $(LIBSO)/Kl_entropy_product.so Kl_entropy_product.o frequency.o log.o -lc -lm
	gcc -fPIC -g -c -Wall Kmeans_normaltraffic.c -lm
	gcc -shared -Wall -o  $(LIBSO)/Kmeans_normaltraffic.so Kmeans_normaltraffic.o frequency.o log.o cluster.o -lc -lm
	$(am__mv) $(srcdir)/*.o $(LIBO)/
	$(am__mv) $(srcdir)/analyzer$(EXEEXT) $(LIBO)/

clean-binPROGRAMS:
	-test -z "$(LIBO)/$(bin_PROGRAMS)" || rm -f $(LIBO)/$(bin_PROGRAMS)
clean-binall:
	rm -f $(LIBO)/*.o
clean-libso:
	rm -f $(LIBSO)/*.so
ft2nfdump$(EXEEXT): $(ft2nfdump_OBJECTS) $(ft2nfdump_DEPENDENCIES) 
	@rm -f ft2nfdump$(EXEEXT)
	$(ft2nfdump_LINK) $(ft2nfdump_OBJECTS) $(ft2nfdump_LDADD) $(LIBS)
nfanon$(EXEEXT): $(nfanon_OBJECTS) $(nfanon_DEPENDENCIES) 
	@rm -f nfanon$(EXEEXT)
	$(LINK) $(nfanon_OBJECTS) $(nfanon_LDADD) $(LIBS)
nfcapd$(EXEEXT): $(nfcapd_OBJECTS) $(nfcapd_DEPENDENCIES) 
	@rm -f nfcapd$(EXEEXT)
	$(nfcapd_LINK) $(nfcapd_OBJECTS) $(nfcapd_LDADD) $(LIBS)
grammar.h: grammar.c
	@if test ! -f $@; then \
	  rm -f grammar.c; \
	  $(MAKE) $(AM_MAKEFLAGS) grammar.c; \
	else :; fi
nfdump$(EXEEXT): $(nfdump_OBJECTS) $(nfdump_DEPENDENCIES) 
	@rm -f nfdump$(EXEEXT)
	$(LINK) $(nfdump_OBJECTS) $(nfdump_LDADD) $(LIBS)
nfexpire$(EXEEXT): $(nfexpire_OBJECTS) $(nfexpire_DEPENDENCIES) 
	@rm -f nfexpire$(EXEEXT)
	$(LINK) $(nfexpire_OBJECTS) $(nfexpire_LDADD) $(LIBS)
nfgen$(EXEEXT): $(nfgen_OBJECTS) $(nfgen_DEPENDENCIES) 
	@rm -f nfgen$(EXEEXT)
	$(LINK) $(nfgen_OBJECTS) $(nfgen_LDADD) $(LIBS)
nfprofile$(EXEEXT): $(nfprofile_OBJECTS) $(nfprofile_DEPENDENCIES) 
	@rm -f nfprofile$(EXEEXT)
	$(LINK) $(nfprofile_OBJECTS) $(nfprofile_LDADD) $(LIBS)
nfreader$(EXEEXT): $(nfreader_OBJECTS) $(nfreader_DEPENDENCIES) 
	@rm -f nfreader$(EXEEXT)
	$(LINK) $(nfreader_OBJECTS) $(nfreader_LDADD) $(LIBS)
analyzer$(EXEEXT): $(nfreplay_OBJECTS) $(nfreplay_DEPENDENCIES) 
	@rm -f nfreplay$(EXEEXT)
	$(LINK) $(nfreplay_OBJECTS) $(nfreplay_LDADD) $(LIBS)
nftest$(EXEEXT): $(nftest_OBJECTS) $(nftest_DEPENDENCIES) 
	@rm -f nftest$(EXEEXT)
	$(LINK) $(nftest_OBJECTS) $(nftest_LDADD) $(LIBS)
nftrack$(EXEEXT): $(nftrack_OBJECTS) $(nftrack_DEPENDENCIES) 
	@rm -f nftrack$(EXEEXT)
	$(nftrack_LINK) $(nftrack_OBJECTS) $(nftrack_LDADD) $(LIBS)
sfcapd$(EXEEXT): $(sfcapd_OBJECTS) $(sfcapd_DEPENDENCIES) 
	@rm -f sfcapd$(EXEEXT)
	$(sfcapd_LINK) $(sfcapd_OBJECTS) $(sfcapd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c


.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`


MethodManager.o: MethodManager.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sfcapd_CFLAGS) $(CFLAGS) -MT MethodManager.o -lm -MD -MP -MF $(DEPDIR)/MethodManager.Tpo -c -o MethodManager.o  `test -f 'MethodManager.c' || echo '$(srcdir)/'`MethodManager.c 
	$(am__mv) $(DEPDIR)/MethodManager.Tpo $(DEPDIR)/MethodManager.Po
#	destination='MethodManager.c' object='MethodManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sfcapd_CFLAGS) $(CFLAGS) -c -o MethodManager.o `test -f 'MethodManager.c' || echo '$(srcdir)/'`MethodManager.c

MethodManager.obj: MethodManager.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sfcapd_CFLAGS) $(CFLAGS) -MT $(LIBO)/MethodManager.obj -MD -MP -MF $(DEPDIR)/MethodManager.Tpo -c -o $(LIBO)/MethodManager.obj `if test -f 'MethodManager.c'; then $(CYGPATH_W) 'MethodManager.c'; else $(CYGPATH_W) '$(srcdir)/MethodManager.c'; fi`
	$(am__mv) $(DEPDIR)/MethodManager.Tpo $(DEPDIR)/MethodManager.Po
#	destination='MethodManager.c' object='MethodManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sfcapd_CFLAGS) $(CFLAGS) -c -o MethodManager.obj `if test -f 'MethodManager.c'; then $(CYGPATH_W) 'MethodManager.c'; else $(CYGPATH_W) '$(srcdir)/MethodManager.c'; fi`



.l.c:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f grammar.c
	-rm -f grammar.h
	-rm -f scanner.c
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-binall clean-libso

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
